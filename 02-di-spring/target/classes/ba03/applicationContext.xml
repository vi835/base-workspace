<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--  声明student对象
      注入：就是赋值的意思
      简单类型 spring中规定java的基本数据类型和String都是简单类型
      di:给属性赋值
      1.set注入(设置注入):spring调用类的set方法 你可以在set方法中完成属性赋值
      1) 简单类型的set注入
           <bean id="xx" class="xx">
               一个property只能给一个属性赋值
               <property name="属性名字" value="此属性的值">
               <property ...>
            </bean>
      2) 引用类型的set注入 spring调用类的set方法
      <bean id="xx" class="xx">
            <property name="属性名字" ref="bean的id(对象的名称)">
      </bean>
      3) 构造注入 spring调用类的有参构造方法 在创建对象的同时 在构造方法中给属性赋值
         构造注入使用 <constructor-arg> 标签
         <constructor-arg>标签；一个<constructor-arg>表示构造方法一个参数
         <constructor-arg>标签属性：
               name:表示构造方法的形参名
               index:表示构造方法的参数的位置 参数从左往右位置是0,1,2的顺序
               value:构造方法的形参类型是简单类型的 使用value赋值
               ref:构造方法的形参是引用类型的 使用ref
      -->
    <bean id="myStudent" class="com.valo.di.ba03.Student">
        <constructor-arg name="name" value="张三"/>
        <constructor-arg name="age" value="10"/>
        <constructor-arg name="school" ref="mySchool"/>
    </bean>

    <bean id="myStudent1" class="com.valo.di.ba03.Student">
        <constructor-arg name="age" value="10" index="1"/>
        <constructor-arg name="name" value="李四" index="0"/>
        <constructor-arg name="school" ref="mySchool" index="2"/>
    </bean>

    <bean id="mySchool" class="com.valo.di.ba03.School">
        <property name="name" value="北京大学"></property>
        <property name="address" value="北京海淀区"></property>
    </bean>

    <!--  创建File 使用构造注入  -->
    <bean id="myFile" class="java.io.File">
        <constructor-arg name="parent" value="D:\workSpace\base-space\02-di-spring"></constructor-arg>
        <constructor-arg name="child" value="readme.md"></constructor-arg>
    </bean>
</beans>